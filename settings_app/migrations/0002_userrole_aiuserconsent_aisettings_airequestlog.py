# Generated by Django 4.2.21 on 2025-05-18 12:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('schemes', '0003_plantier'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('settings_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(choices=[('internal_admin', 'Internal Admin'), ('branch_owner', 'Branch Owner'), ('scheme_manager', 'Scheme Manager'), ('compliance_auditor', 'Compliance Auditor')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_users', to='settings_app.branch')),
                ('scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_users', to='schemes.scheme')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='role', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
            },
        ),
        migrations.CreateModel(
            name='AIUserConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_consent', models.BooleanField(default=False, help_text='Consent for AI-powered search')),
                ('insight_consent', models.BooleanField(default=False, help_text='Consent for AI-powered insights')),
                ('suggestion_consent', models.BooleanField(default=False, help_text='Consent for AI-powered suggestions')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_consent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI User Consent',
                'verbose_name_plural': 'AI User Consents',
            },
        ),
        migrations.CreateModel(
            name='AISettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_model', models.CharField(default='gpt-4o', help_text='Default OpenAI model to use', max_length=50)),
                ('enable_logging', models.BooleanField(default=True, help_text='Whether to log AI requests')),
                ('require_consent', models.BooleanField(default=True, help_text='Whether to require explicit consent for AI features')),
                ('max_tokens', models.IntegerField(default=1000, help_text='Maximum tokens for AI responses')),
                ('temperature', models.FloatField(default=0.7, help_text='Temperature for AI responses (0.0-1.0)')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_settings_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Settings',
                'verbose_name_plural': 'AI Settings',
            },
        ),
        migrations.CreateModel(
            name='AIRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.CharField(choices=[('search', 'AI Search'), ('summarize', 'Content Summarization'), ('insight', 'Data Insights'), ('suggestion', 'Tier Suggestion'), ('other', 'Other AI Action')], max_length=50)),
                ('prompt_summary', models.CharField(blank=True, help_text='High-level summary of the prompt (no PII)', max_length=255, null=True)),
                ('model_used', models.CharField(blank=True, max_length=50, null=True)),
                ('response_status', models.BooleanField(default=True, help_text='Whether the request was successful')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Request Log',
                'verbose_name_plural': 'AI Request Logs',
                'ordering': ['-timestamp'],
            },
        ),
    ]
