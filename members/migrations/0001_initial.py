# Generated by Django 4.2.21 on 2025-05-17 05:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('settings_app', '0001_initial'),
        ('schemes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DIYApplication',
            fields=[
                ('application_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('agent_code', models.CharField(blank=True, max_length=50, null=True)),
                ('policy_type', models.CharField(choices=[('funeral', 'Funeral Cover'), ('life', 'Life Cover'), ('combined', 'Combined Cover')], max_length=20)),
                ('cover_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('monthly_premium', models.DecimalField(decimal_places=2, max_digits=10)),
                ('has_extended_family', models.BooleanField(default=False)),
                ('extended_family_members', models.PositiveIntegerField(default=0)),
                ('payment_method', models.CharField(choices=[('debit_order', 'Debit Order'), ('eft', 'Electronic Funds Transfer (EFT)')], max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('account_type', models.CharField(blank=True, max_length=20, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=20, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('debit_day', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)])),
                ('marketing_consent', models.BooleanField(default=False)),
                ('form_data', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diy_applications', to='settings_app.agent')),
            ],
            options={
                'verbose_name': 'DIY Application',
                'verbose_name_plural': 'DIY Applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('Mr', 'Mr.'), ('Mrs', 'Mrs.'), ('Ms', 'Ms.'), ('Miss', 'Miss.'), ('Dr', 'Dr.'), ('Prof', 'Prof.'), ('Other', 'Other...')], max_length=20, null=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('id_number', models.CharField(blank=True, max_length=13, null=True, verbose_name='ID Number')),
                ('passport_number', models.CharField(blank=True, max_length=20, verbose_name='Passport Number')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=6, verbose_name='Gender')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp Number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Partnered', 'Partnered'), ('Divorced', 'Divorced')], max_length=10, null=True, verbose_name='Marital Status')),
                ('nationality', models.CharField(blank=True, max_length=100, verbose_name='Nationality')),
                ('country_of_birth', models.CharField(blank=True, max_length=100, verbose_name='Country of Birth')),
                ('country_of_residence', models.CharField(blank=True, max_length=100, verbose_name='Country of Residence')),
                ('physical_address_line_1', models.CharField(blank=True, max_length=255, verbose_name='Address line 1')),
                ('physical_address_line_2', models.CharField(blank=True, max_length=255, verbose_name='Address line 2')),
                ('physical_address_city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('physical_address_postal_code', models.CharField(blank=True, max_length=10, verbose_name='Postal code')),
                ('spouse_first_name', models.CharField(blank=True, max_length=100, verbose_name="Spouse's First Name")),
                ('spouse_last_name', models.CharField(blank=True, max_length=100, verbose_name="Spouse's Last Name")),
                ('spouse_id_number', models.CharField(blank=True, max_length=13, null=True, verbose_name="Spouse's ID Number")),
                ('spouse_date_of_birth', models.DateField(blank=True, null=True, verbose_name="Spouse's Date of Birth")),
                ('spouse_gender', models.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male')], max_length=6, verbose_name="Spouse's Gender")),
                ('spouse_phone_number', models.CharField(blank=True, max_length=20, verbose_name="Spouse's Phone Number")),
                ('spouse_email', models.EmailField(blank=True, max_length=254, verbose_name="Spouse's Email")),
                ('spouse_passport_number', models.CharField(blank=True, max_length=50, null=True, verbose_name="Spouse's Passport Number")),
                ('spouse_nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name="Spouse's Nationality")),
                ('spouse_country_of_birth', models.CharField(blank=True, max_length=100, null=True, verbose_name="Spouse's Country of Birth")),
                ('spouse_country_of_residence', models.CharField(blank=True, max_length=100, null=True, verbose_name="Spouse's Country of Residence")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DIYApplicant',
            fields=[
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='applicant', serialize=False, to='members.diyapplication')),
                ('title', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('id_number', models.CharField(max_length=13, unique=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('life_partner', 'Life Partner'), ('other', 'Other')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10)),
                ('country', models.CharField(default='South Africa', max_length=100)),
                ('is_south_african', models.BooleanField(default=True)),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'DIY Applicant',
                'verbose_name_plural': 'DIY Applicants',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_number', models.CharField(blank=True, max_length=50, null=True)),
                ('uw_membership_number', models.CharField(blank=True, max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('inception_date', models.DateField(blank=True, null=True)),
                ('cover_date', models.DateField(blank=True, null=True)),
                ('policy_number', models.CharField(blank=True, editable=False, max_length=20, null=True, unique=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('DEBIT_ORDER', 'Debit Order'), ('EFT', 'EFT'), ('EASYPAY', 'Easypay')], default='DEBIT_ORDER', max_length=20)),
                ('branch_code', models.CharField(blank=True, max_length=10)),
                ('account_holder_name', models.CharField(blank=True, max_length=100)),
                ('account_number', models.CharField(blank=True, max_length=20)),
                ('debit_instruction_day', models.CharField(blank=True, max_length=20)),
                ('eft_agreed', models.BooleanField(default=False)),
                ('easypay_number', models.CharField(blank=True, max_length=20, null=True)),
                ('otp_confirmed', models.BooleanField(default=False)),
                ('cover_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('premium_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('unique_policy_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='branches.bank')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='members.member')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='schemes.plan')),
                ('scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='schemes.scheme')),
                ('underwritten_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='settings_app.agent')),
            ],
        ),
        migrations.CreateModel(
            name='OtpVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(max_length=128)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('resent_count', models.PositiveSmallIntegerField(default=0)),
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='otp', to='members.policy')),
            ],
        ),
        migrations.CreateModel(
            name='DiySignupLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings_app.agent')),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.diysignuplog')),
            ],
        ),
        migrations.CreateModel(
            name='DIYBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('id_number', models.CharField(blank=True, max_length=13, null=True)),
                ('relationship', models.CharField(choices=[('spouse', 'Spouse'), ('child', 'Child'), ('parent', 'Parent'), ('sibling', 'Sibling'), ('other_relative', 'Other Relative'), ('friend', 'Friend'), ('trust', 'Trust'), ('estate', 'Estate')], max_length=20)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100)])),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to='members.diyapplication')),
            ],
            options={
                'verbose_name': 'DIY Beneficiary',
                'verbose_name_plural': 'DIY Beneficiaries',
                'ordering': ['-is_primary', 'id'],
            },
        ),
        migrations.CreateModel(
            name='DIYApplicationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_copy', 'ID Copy'), ('proof_of_address', 'Proof of Address'), ('bank_statement', 'Bank Statement'), ('proof_of_income', 'Proof of Income'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='diy_application_documents/%Y/%m/%d/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='members.diyapplication')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DIY Application Document',
                'verbose_name_plural': 'DIY Application Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(max_length=50, verbose_name='Relationship')),
                ('id_number', models.CharField(blank=True, max_length=13, verbose_name='ID Number')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=6, verbose_name='Gender')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='members.policy')),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_to_main_member', models.CharField(max_length=50, verbose_name='Relationship to Main Member')),
                ('id_number', models.CharField(blank=True, max_length=13, verbose_name='ID Number')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('share', models.PositiveSmallIntegerField(default=100)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to='members.policy')),
            ],
        ),
    ]
