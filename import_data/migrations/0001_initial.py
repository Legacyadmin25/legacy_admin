# Generated by Django 4.2.21 on 2025-05-17 05:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentOnboardingImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='imports/agent_onboarding/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_onboarding_imports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankReconciliationImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='bank_reconciliation/')),
                ('date_imported', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LapsedPolicyReactivationImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='imports/policy_reactivations/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='policy_reactivation_imports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyAmendmentImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='imports/policy_amendments/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='policy_amendment_imports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyAmendmentRowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.PositiveIntegerField()),
                ('membership_number', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('not_found', 'Not Found')], max_length=20)),
                ('errors', models.JSONField(blank=True, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('import_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row_logs', to='import_data.policyamendmentimport')),
            ],
        ),
        migrations.CreateModel(
            name='LapsedPolicyReactivationRowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.PositiveIntegerField()),
                ('membership_number', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('not_found', 'Not Found')], max_length=20)),
                ('errors', models.JSONField(blank=True, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('import_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row_logs', to='import_data.lapsedpolicyreactivationimport')),
            ],
        ),
        migrations.CreateModel(
            name='BankReconciliationRowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.PositiveIntegerField()),
                ('transaction_date', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('import_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row_logs', to='import_data.bankreconciliationimport')),
            ],
        ),
        migrations.CreateModel(
            name='AgentOnboardingRowLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.PositiveIntegerField()),
                ('full_name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True)),
                ('scheme_code', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50, verbose_name='Agent Code')),
                ('contact_number', models.CharField(max_length=20)),
                ('commission_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('import_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row_logs', to='import_data.agentonboardingimport')),
            ],
        ),
        migrations.CreateModel(
            name='ImportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_type', models.CharField(default='legacy', help_text='General type of data being imported (for legacy support)', max_length=20)),
                ('category', models.CharField(choices=[('policy', 'Policy'), ('agent', 'Agent'), ('payment', 'Payment')], default='policy', help_text='High-level import category (e.g., policy, agent, payment)', max_length=20)),
                ('subtype', models.CharField(blank=True, help_text="Specific subtype like 'bulk', 'amendment', 'easypay'", max_length=50)),
                ('filename', models.CharField(max_length=255)),
                ('records_processed', models.PositiveIntegerField(default=0)),
                ('records_successful', models.PositiveIntegerField(default=0)),
                ('records_failed', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who initiated the import', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['status'], name='import_data_status_6514ae_idx'), models.Index(fields=['category'], name='import_data_categor_1cc4d2_idx'), models.Index(fields=['subtype'], name='import_data_subtype_424ea7_idx'), models.Index(fields=['started_at'], name='import_data_started_a66d38_idx')],
            },
        ),
    ]
